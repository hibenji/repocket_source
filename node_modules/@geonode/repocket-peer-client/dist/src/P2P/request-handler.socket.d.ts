/// <reference types="node" />
/// <reference types="node" />
import { Socket } from 'net';
import EventEmitter from 'events';
import { TargetSocket } from './target.socket';
import { Socket5Handler } from './socks5/socks5.socket';
declare class ReqHandlerSocket extends Socket {
    uid?: number;
    retryConnectionCounter?: number;
    isBusy?: boolean;
    type?: 'main' | 'helper' | string;
}
export declare class RequestHandlerSocket {
    emitter: EventEmitter;
    _ip: any;
    _port: any;
    _reqId: any;
    _peerId: any;
    socket: ReqHandlerSocket;
    targetSocket: TargetSocket;
    socks5targetSocket: Socket5Handler;
    private isSocks5Req;
    constructor(ip: any, port: any, reqId: any, peerId: any);
    connect(): void;
    httpProtocolHandler(data: any, buffer: any): Promise<void>;
    _handleRead(data: any): Promise<void>;
    isSocks5Request(buffer: any): boolean | undefined;
    onData(data: any): Promise<void>;
    onError(error: any): void;
    onClose(): void;
    private parseHttpVer10;
    private parseHttpRequest;
}
export {};
