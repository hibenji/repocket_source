"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ENV_CONFIG = void 0;
const dev = {
    env: 'development',
    apiUrl: 'https://staging-server.repocket.co/api',
    baseUrl: 'localhost:3000',
    peerApiUrl: 'https://peer-staging.repocket.co/api',
    monitorApiUrl: 'https://monitor.repocket.co',
    webkitURL: 'https://staging-repocket.netlify.app',
    dynamicLinkBaseUrl: 'https://link.repocket.co',
    packageName: 'com.app.repocket',
};
const staging = {
    env: 'staging',
    apiUrl: 'https://staging-server.repocket.co/api',
    peerApiUrl: 'https://peer-staging.repocket.co/api',
    monitorApiUrl: 'https://monitor.repocket.co',
    baseUrl: 'https://staging-repocket-dashboard.netlify.app',
    webkitURL: 'https://staging-repocket.netlify.app',
    dynamicLinkBaseUrl: 'https://staging-link.repocket.co',
    packageName: 'com.app.repocket',
};
const prod = {
    env: 'production',
    apiUrl: 'https://api.repocket.co/api',
    peerApiUrl: 'https://peer.repocket.co/api',
    monitorApiUrl: 'https://monitor.repocket.co/api',
    baseUrl: 'https://app.repocket.co',
    webkitURL: 'https://repocket.co',
    dynamicLinkBaseUrl: 'https://link.repocket.co',
    packageName: 'com.app.repocket',
};
const getConfig = (env) => {
    // RPLogger.log("ENV: " + env)
    return prod;
    switch (env) {
        case prod.env: {
            return prod;
        }
        case dev.env: {
            return dev;
        }
        case staging.env: {
            return dev;
        }
        default: {
            return staging;
        }
    }
};
const config = getConfig(process.env.NODE_ENV); // TODO : CHAGE TO DEV
exports.ENV_CONFIG = {
    // Add common config values here
    ...config,
};
