"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.nodeLogIn = void 0;
const api_service_1 = require("../services/api.service");
const env_1 = require("./env");
// export const firebase = new FirebaseService(storage, userApiService, true, deviceService);
const peerManagerApiService = new api_service_1.ApiService('', {
    baseUrl: env_1.ENV_CONFIG.peerApiUrl,
});
async function nodeLogIn(email, api_key) {
    return new Promise((resolve, reject) => {
        peerManagerApiService
            .post('peer/token', { email: email, api_key: api_key })
            .then((result) => {
            if (result.status === 200) {
                resolve({ peerApiToken: result.data.token, userId: result.data.user_id });
            }
            else {
                switch (result.error?.code) {
                    case 'auth/user-not-found':
                        reject({ error: 'auth/user-not-found' });
                        return;
                    case 'auth/wrong-password':
                        reject({ error: 'auth/wrong-password' });
                        return;
                    default:
                        reject({ error: result.error?.code });
                        return;
                }
            }
        })
            .catch((e) => {
            reject({ error: e });
            return;
        });
    });
}
exports.nodeLogIn = nodeLogIn;
